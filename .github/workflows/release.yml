# .github/workflows/release.yml

name: Create Release and Build Assets

on:
  push:
    tags:
      - 'v*' # Run this workflow when a tag like v1.0, v1.1 is pushed

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release # This job depends on the release being created first
    strategy:
      matrix:
        target: [
          { os: "ubuntu-latest", triple: "x86_64-unknown-linux-gnu", name: "devchain-linux-amd64" },
          { os: "windows-latest", triple: "x86_64-pc-windows-msvc", name: "devchain-windows-amd64.exe" },
          { os: "macos-latest", triple: "x86_64-apple-darwin", name: "devchain-macos-amd64" }
        ]
    runs-on: ${{ matrix.target.os }} # Use the correct OS for each build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target.triple }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target.triple }}
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target.triple }}/release/${{ matrix.target.name }}
          asset_name: ${{ matrix.target.name }}
          asset_content_type: application/octet-stream

